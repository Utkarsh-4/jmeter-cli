<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Metrobank Clients" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loopCount,1)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(numUsers,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampUpPeriod,1)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${__P(lineCount)}</stringProp>
        </LoopController>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(csvFilePath)}</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">GLOBAL_CLIENT_ID,CATEGORY_CODE,FAMILY_GROUP_ID,SALUTATION,CLIENT_FNAME,CLIENT_MNAME,CLIENT_LNAME,MOM_MAIDEN_NAME,SHORTNAME,GENDER,DOB,PLACE_OF_BIRTH,NATIONALITY,MARITAL_STATUS,CLIENT_TYPE,RESIDENCE_OF_TAX,SENIOR_CITIZEN_WEF,ACTIVE,BRANCH_CODE,PAN_NO,OCCUPATION_ID,BUSINESS,INDUSTRY,SHARED_NOC,RBI_PERMISSION,POA_RECEIVED,REPATRIABLE,ANNUAL_INCOME,NET_WORTH,TYPE_IDENF,IDENF_NO,DOI,DOE,POI,ISS_AUTH,NAME_EMP_BUSI,EMP_BUSI_ADD,FORM_OF_BUSI,SIZE_OF_BUSI,ID_TYPE,ID_NUM,DATA_PRIVACY,SECONDARY_LICENSE,ADD_PER1,PER_COUNTRY,STATE,PER_CITY,PER_PINCODE,ADD_PRESENT1,PRESENT_COUNTRY,PRESENT_STATE,PRESENT_CITY,PRESENT_PINCODE,ADD_COM1,COM_COUNTRY,COMM_STATE,COM_CITY,COM_PINCODE,PHONE_OFF,PHONE_RES,MOBILE_NO,FAX_NO,EMAIL_PERSONAL,EMAIL_OFFICIAL,DEFAULT_EMAIL,CONTACT_PERSON_SALU,CONTACT_PERSON,C_PHONE,FACEBOOK_ID,EXPECTED_INVEST,INVEST_FREQ,PREF_PAY_MODE,PROD_SERVICE,AMLA_RISK_PROFILE,SRC_OF_FUND,SRC_OF_INCOME,NEXT_REVIEW_DATE,AMLA_SCORE,AVG_AMOUNT_OF_TRANS,W_VISA_ACR_CARD,CLIENT_ORIGIN,LENGTH_OF_RELATIONSHIP_MBTC,OVERRIDE_FOR_HR,COUNTRY_OF_FIRST_LARGEST_SUPP,COUNTRY_OF_SEC_LARGEST_SUPP,COUNTRY_OF_THIRD_LARGEST_SUPP,CH_FOR_DEPOSITING_FUNDS,COUNTRY_OF_ORIGIN,POL_EXPO_PER,GOV_POS_PEP_AND_REL,OFACSDN_UN_SANC_LIST_IDBS_PE,UN_SACT_LIST,IDBS_CODE,DOSRI,FATCA_STAT,FATCA_GIIN,FATCA_CCW,FATCA_US_TIN_SSN,US_ADDRESS,ACT_VOL_FREQ_COMM_W,SUSPI_ACT_TRANS_NOTED,W_JUST_OUT_SERV,OWNERSHIP_STRUCT,EXP_ORIGIN_DESTIN_REMIT,SRC_DON_GIFT_INHERIT,COUNTRY_ORIGIN_CHN_DEP_FUND,PURPOSE_ACCT_OPENING,PROD_AVAIL_CONSIS_PURPOSE,OTHER_BANK_ACCT,VOL_OF_ASSETS,BRANCH_SERVICE_AREA,REL_REFERRED_SOLICITED_BY,SOLICITOR_REL_FNAME_POSITION,EXPECTED_VOL_FREQ_COMMEN_WIT,RECOMMENDATION,ADD_DOCS_INFO,AFFILIATED_COMPANIES,OTHER_INT_PUB_INFO,EMP_RELATIVE,NAME_REL_MBTC_EMP,AFFILIATION,REMARKS,RISK_PROFILE,RISK_PROFILE_DATE</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;CLIENT_ID&quot;:&quot;&quot;,&quot;SALUTATION&quot;:&quot;${SALUTATION}&quot;,&quot;SHORTNAME&quot;:&quot;${SHORTNAME}&quot;,&quot;PAN_NO&quot;:&quot;${PAN_NO}&quot;,&quot;ADD_PER1&quot;:&quot;${ADD_PER1}&quot;,&quot;ADD_COM1&quot;:&quot;${ADD_COM1}&quot;,&quot;CONTACT_PERSON&quot;:&quot;${CONTACT_PERSON}&quot;,&quot;C_PHONE&quot;:&quot;${C_PHONE}&quot;,&#xd;
&quot;GENDER&quot;:&quot;${GENDER}&quot;,&quot;MARITAL_STATUS&quot;:&quot;${MARITAL_STATUS}&quot;,&quot;RESIDENCE_OF_TAX&quot;:&quot;${RESIDENCE_OF_TAX}&quot;,&quot;DOB&quot;:&quot;${DOB}&quot;,&quot;PHONE_OFF&quot;:&quot;${PHONE_OFF}&quot;,&quot;PHONE_RES&quot;:&quot;${PHONE_RES}&quot;,&quot;MOBILE_NO&quot;:&quot;${MOBILE_NO}&quot;,&quot;FAX_NO&quot;:&quot;${FAX_NO}&quot;,&#xd;
&quot;EMAIL_OFFICIAL&quot;:&quot;${EMAIL_OFFICIAL}&quot;,&quot;EMAIL_PERSONAL&quot;:&quot;${EMAIL_PERSONAL}&quot;,&quot;DEFAULT_EMAIL&quot;:&quot;${DEFAULT_EMAIL}&quot;,&quot;FAMILY_GROUP_ID&quot;:&quot;${FAMILY_GROUP_ID}&quot;,&quot;OCCUPATION_ID&quot;:&quot;${OCCUPATION_ID}&quot;,&quot;CATEGORY_CODE&quot;:&quot;${CATEGORY_CODE}&quot;,&#xd;
&quot;CLIENT_TYPE&quot;:&quot;${CLIENT_TYPE}&quot;,&quot;ACTIVE&quot;:&quot;${ACTIVE}&quot;,&quot;PER_CITY&quot;:&quot;${PER_CITY}&quot;,&quot;PER_COUNTRY&quot;:&quot;${PER_COUNTRY}&quot;,&quot;PER_PINCODE&quot;:&quot;${PER_PINCODE}&quot;,&quot;COM_CITY&quot;:&quot;${COM_CITY}&quot;,&quot;COM_COUNTRY&quot;:&quot;${COM_COUNTRY}&quot;,&#xd;
&quot;ADD_PRESENT1&quot;:&quot;${ADD_PRESENT1}&quot;,&quot;PRESENT_COUNTRY&quot;:&quot;${PRESENT_COUNTRY}&quot;,&quot;PRESENT_STATE&quot;:&quot;${PRESENT_STATE}&quot;,&quot;PRESENT_CITY&quot;:&quot;${PRESENT_CITY}&quot;,&quot;PRESENT_PINCODE&quot;:&quot;${PRESENT_PINCODE}&quot;,&quot;REPATRIABLE&quot;:&quot;${REPATRIABLE}&quot;,&quot;CONTACT_PERSON_SALU&quot;:&quot;${CONTACT_PERSON_SALU}&quot;,&#xd;
&quot;POASTATUS&quot;:&quot;&quot;,&quot;SHARED_NOC&quot;:&quot;${SHARED_NOC}&quot;,&quot;CLIENT_FNAME&quot;:&quot;${CLIENT_FNAME}&quot;,&quot;CLIENT_MNAME&quot;:&quot;${CLIENT_MNAME}&quot;,&quot;CLIENT_LNAME&quot;:&quot;${CLIENT_LNAME}&quot;,&quot;NATIONALITY&quot;:&quot;${NATIONALITY}&quot;,&#xd;
&quot;ANNUAL_INCOME&quot;:&quot;${ANNUAL_INCOME}&quot;,&quot;NET_WORTH&quot;:&quot;${NET_WORTH}&quot;,&quot;BUSINESS&quot;:&quot;${BUSINESS}&quot;,&quot;INDUSTRY&quot;:&quot;${INDUSTRY}&quot;,&quot;MOM_MAIDEN_NAME&quot;:&quot;${MOM_MAIDEN_NAME}&quot;,&quot;BRANCH_CODE&quot;:&quot;${BRANCH_CODE}&quot;,&quot;TYPE_IDENF&quot;:&quot;${TYPE_IDENF}&quot;,&#xd;
&quot;IDENF_NO&quot;:&quot;${IDENF_NO}&quot;,&quot;DOI&quot;:&quot;${DOI}&quot;,&quot;POI&quot;:&quot;${POI}&quot;,&quot;ISS_AUTH&quot;:&quot;${ISS_AUTH}&quot;,&quot;STATE&quot;:&quot;${STATE}&quot;,&quot;COMM_STATE&quot;:&quot;${COMM_STATE}&quot;,&quot;COM_PINCODE&quot;:&quot;${COM_PINCODE}&quot;,&quot;DOE&quot;:&quot;${DOE}&quot;,&quot;GLOBAL_CLIENT_ID&quot;:&quot;${GLOBAL_CLIENT_ID}&quot;,&quot;SENIOR_CITIZEN_WEF&quot;:&quot;${SENIOR_CITIZEN_WEF}&quot;,&#xd;
&quot;EXPECTED_INVEST&quot;:&quot;${EXPECTED_INVEST}&quot;,&quot;INVEST_FREQ&quot;:&quot;${INVEST_FREQ}&quot;,&quot;PREF_PAY_MODE&quot;:&quot;${PREF_PAY_MODE}&quot;,&quot;PROD_SERVICE&quot;:&quot;${PROD_SERVICE}&quot;,&quot;AMLA_RISK_PROFILE&quot;:&quot;${AMLA_RISK_PROFILE}&quot;,&quot;SRC_OF_FUND&quot;:&quot;${SRC_OF_FUND}&quot;,&#xd;
&quot;SRC_OF_INCOME&quot;:&quot;${SRC_OF_INCOME}&quot;,&quot;PLACE_OF_BIRTH&quot;:&quot;${PLACE_OF_BIRTH}&quot;,&quot;NEXT_REVIEW_DATE&quot;:&quot;${NEXT_REVIEW_DATE}&quot;,&quot;AMLA_SCORE&quot;:&quot;${AMLA_SCORE}&quot;,&quot;RBI_PERMISSION&quot;:&quot;${RBI_PERMISSION}&quot;},&#xd;
&quot;_custparams&quot;:{&quot;REMARKS&quot;:&quot;${REMARKS}&quot;,&quot;PURPOSE_ACCT_OPENING&quot;:&quot;${PURPOSE_ACCT_OPENING}&quot;,&quot;FACEBOOK_ID&quot;:&quot;${FACEBOOK_ID}&quot;,&quot;CH_FOR_DEPOSITING_FUNDS&quot;:&quot;${CH_FOR_DEPOSITING_FUNDS}&quot;,&quot;WATCH_LIST_HIT&quot;:null,&#xd;
&quot;OWNERSHIP_STRUCT&quot;:&quot;${OWNERSHIP_STRUCT}&quot;,&quot;SUSPI_ACT_TRANS_NOTED&quot;:&quot;&quot;,&quot;W_JUST_OUT_SERV&quot;:&quot;&quot;,&quot;EMP_BUSI_ADD&quot;:&quot;${EMP_BUSI_ADD}&quot;,&quot;FORM_OF_BUSI&quot;:&quot;${FORM_OF_BUSI}&quot;,&#xd;
&quot;ID_NUM&quot;:&quot;${ID_NUM}&quot;,&quot;DATA_PRIVACY&quot;:&quot;${DATA_PRIVACY}&quot;,&quot;LENGTH_OF_RELATIONSHIP_MBTC&quot;:&quot;${LENGTH_OF_RELATIONSHIP_MBTC}&quot;,&quot;BRANCH_SERVICE_AREA&quot;:&quot;${BRANCH_SERVICE_AREA}&quot;,&quot;FINANCIAL_PROFILE&quot;:&quot;&quot;,&#xd;
&quot;OTHER_INT_PUB_INFO&quot;:&quot;${OTHER_INT_PUB_INFO}&quot;,&quot;EMP_RELATIVE&quot;:&quot;${EMP_RELATIVE}&quot;,&quot;NAME_REL_MBTC_EMP&quot;:&quot;${NAME_REL_MBTC_EMP}&quot;,&quot;ACT_VOL_FREQ_COMM_W&quot;:&quot;${ACT_VOL_FREQ_COMM_W}&quot;,&#xd;
&quot;EXP_ORIGIN_DESTIN_REMIT&quot;:&quot;${EXP_ORIGIN_DESTIN_REMIT}&quot;,&quot;SRC_FUNDS_1&quot;:&quot;&quot;,&quot;SRC_DON_GIFT_INHERIT&quot;:&quot;${SRC_DON_GIFT_INHERIT}&quot;,&quot;COUNTRY_ORIGIN_CHN_DEP_FUND&quot;:&quot;${COUNTRY_ORIGIN_CHN_DEP_FUND}&quot;,&quot;NAME_EMP_BUSI&quot;:&quot;${NAME_EMP_BUSI}&quot;,&#xd;
&quot;SIZE_OF_BUSI&quot;:&quot;${SIZE_OF_BUSI}&quot;,&quot;ID_TYPE&quot;:&quot;${ID_TYPE}&quot;,&quot;SECONDARY_LICENSE&quot;:&quot;${SECONDARY_LICENSE}&quot;,&quot;AFFILIATION&quot;:&quot;&quot;,&quot;SRC_FUNDS_2&quot;:&quot;&quot;,&quot;SRC_FUNDS_3&quot;:&quot;&quot;,&quot;SRC_FUNDS_4&quot;:&quot;&quot;,&quot;AVG_AMOUNT_OF_TRANS&quot;:&quot;${AVG_AMOUNT_OF_TRANS}&quot;,&quot;W_VISA_ACR_CARD&quot;:&quot;${W_VISA_ACR_CARD}&quot;,&#xd;
&quot;OTHER_BANK_ACCT&quot;:&quot;${OTHER_BANK_ACCT}&quot;,&quot;VOL_OF_ASSETS&quot;:&quot;${VOL_OF_ASSETS}&quot;,&quot;REL_REFERRED_SOLICITED_BY&quot;:&quot;${REL_REFERRED_SOLICITED_BY}&quot;,&quot;SOLICITOR_REL_FNAME_POSITION&quot;:&quot;${SOLICITOR_REL_FNAME_POSITION}&quot;,&#xd;
&quot;PROD_AVAIL_CONSIS_PURPOSE&quot;:&quot;${PROD_AVAIL_CONSIS_PURPOSE}&quot;,&quot;CLIENT_ORIGIN&quot;:&quot;${CLIENT_ORIGIN}&quot;,&#xd;
&quot;OVERRIDE_FOR_HR&quot;:&quot;${OVERRIDE_FOR_HR}&quot;,&quot;COUNTRY_OF_SEC_LARGEST_SUPP&quot;:&quot;${COUNTRY_OF_SEC_LARGEST_SUPP}&quot;,&quot;COUNTRY_OF_THIRD_LARGEST_SUPP&quot;:&quot;${COUNTRY_OF_THIRD_LARGEST_SUPP}&quot;,&#xd;
&quot;COUNTRY_OF_ORIGIN&quot;:&quot;${COUNTRY_OF_ORIGIN}&quot;,&quot;POL_EXPO_PER&quot;:&quot;${POL_EXPO_PER}&quot;,&quot;GOV_POS_PEP_AND_REL&quot;:&quot;${GOV_POS_PEP_AND_REL}&quot;,&#xd;
&quot;OFACSDN_UN_SANC_LIST_IDBS_PEP&quot;:null,&quot;UN_SACT_LIST&quot;:&quot;${UN_SACT_LIST}&quot;,&quot;IDBS_CODE&quot;:&quot;${IDBS_CODE}&quot;,&quot;DOSRI&quot;:&quot;${DOSRI}&quot;,&quot;EXPECTED_VOL_FREQ_COMMEN_WIT&quot;:&quot;${EXPECTED_VOL_FREQ_COMMEN_WIT}&quot;,&#xd;
&quot;RECOMMENDATION&quot;:&quot;${RECOMMENDATION}&quot;,&quot;NATIONALITY_BENEFICIAL&quot;:&quot;&quot;,&quot;NATIONALITY_SIGNATORY&quot;:&quot;&quot;,&quot;INDUSTRY_CLIENT&quot;:&quot;&quot;,&quot;OLD_RM_NUMBER&quot;:&quot;&quot;,&quot;ADD_DOCS_INFO&quot;:&quot;${ADD_DOCS_INFO}&quot;,&#xd;
&quot;AFFILIATED_COMPANIES&quot;:&quot;${AFFILIATED_COMPANIES}&quot;,&quot;UNIT_ASSIGN&quot;:null,&quot;COUNTRY_OF_FIRST_LARGEST_SUPP&quot;:&quot;${COUNTRY_OF_FIRST_LARGEST_SUPP}&quot;,&#xd;
&quot;FATCA_GIIN&quot;:&quot;${FATCA_GIIN}&quot;,&quot;FATCA_STAT&quot;:&quot;${FATCA_STAT}&quot;,&quot;FATCA_CCW&quot;:&quot;${FATCA_CCW}&quot;,&quot;FATCA_US_TIN_SSN&quot;:&quot;${FATCA_US_TIN_SSN}&quot;,&quot;US_ADDRESS&quot;:&quot;${US_ADDRESS}&quot;,&quot;SPOUSE_NAME&quot;:&quot;&quot;,&#xd;
&quot;NO_DEPENDENTS&quot;:&quot;&quot;,&quot;NO_OF_CHILDREN&quot;:&quot;&quot;,&quot;CLIENT_NAME_CMF&quot;:&quot;&quot;},&quot;_ignore_prc_con&quot;:&quot;n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/NREST/clients/create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${__P(server_ip)}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:124.0) Gecko/20100101 Firefox/124.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sessionid" elementType="Header">
                  <stringProp name="Header.name">sessionid</stringProp>
                  <stringProp name="Header.value">wealthonline</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">3042</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">io=TwmMMVbWhubWM2XPAAEd</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="TE" elementType="Header">
                  <stringProp name="Header.name">TE</stringProp>
                  <stringProp name="Header.value">trailers</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
